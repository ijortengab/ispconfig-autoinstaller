# !/bin/bash
# http://ijortengab.id
# https://github.com/ijortengab/ispconfig-autoinstaller

# Input Value.
DOMAIN="$1"
DIGITALOCEAN_TOKEN="$2"
IP_PUBLIC="$3"

# Default Value.
SUBDOMAIN_FQCDN=server
TIMEZONE='Asia/Jakarta'
VERSION_ROUNDCUBE='1.4.11'
VERSION_PHPMYADMIN='5.1.1'
SUBDOMAIN_PHPMYADMIN=db
SUBDOMAIN_ROUNDCUBE=mail
SUBDOMAIN_ISPCONFIG=cp
REMOTE_USER_ROUNDCUBE=roundcube
REMOTE_USER_ROOT=root
DEBIAN_CONF='debian100.conf.php'
DKIM_SELECTOR=default
EMAIL_ADMIN=admin
EMAIL_HOST=hostmaster
EMAIL_WEB=webmaster
EMAIL_POST=postmaster
[ -n "$DIGITALOCEAN_TOKEN" ] || \
[ -f ~/.digitalocean-token-ispconfig.txt ] && \
DIGITALOCEAN_TOKEN=$(<~/.digitalocean-token-ispconfig.txt)
[ -n "$IP_PUBLIC" ] || IP_PUBLIC=$(wget -T 3 -t 1 -4qO- "http://ip1.dynupdate.no-ip.com/")

# Validate Required Value.
until [[ -n "$DOMAIN" ]]; do
    read -p "Domain: " DOMAIN
done
until [[ -n "$DIGITALOCEAN_TOKEN" ]]; do
    read -p "DigitalOcean Token API: " DIGITALOCEAN_TOKEN
done
until [[ -n "$IP_PUBLIC" ]]; do
    read -p "IP Address Public: " IP_PUBLIC
    IP_PUBLIC=$(wget -T 3 -t 1 -4qO- "http://ip1.dynupdate.no-ip.com/")
done
echo "Domain is: ${DOMAIN}"
echo "DigitalOcean token is: $DIGITALOCEAN_TOKEN"
echo "IP Address Public is: ${IP_PUBLIC}"

# Additional Value.
FQCDN="${SUBDOMAIN_FQCDN}.${DOMAIN}"
FQCDN_PHPMYADMIN="${SUBDOMAIN_PHPMYADMIN}.${DOMAIN}"
FQCDN_ROUNDCUBE="${SUBDOMAIN_ROUNDCUBE}.${DOMAIN}"
FQCDN_ISPCONFIG="${SUBDOMAIN_ISPCONFIG}.${DOMAIN}"
FQCDN_MX="$FQCDN"

# Validate Variables.
if [[ -z $(grep -m 1 -oE '^[0-9]{1,3}(\.[0-9]{1,3}){3}$'  <<< $IP_PUBLIC ) ]];then
    echo IP Address Invalid: "'""$IP_PUBLIC""'".
    echo -e '\033[0;31m'Script terminated.'\033[0m'
    exit 1
fi

if [[ ! $(hostname -f) == $FQCDN ]];then
    echo
    echo -e '\033[0;33m'Attention'\033[0m':
    echo '   'Your current hostname is different with your request.
    echo '   hostname -f    #' $(hostname -f)
    echo '   'echo \$FQCDN'    #' $FQCDN
    echo
    echo -e '\033[0;31m'Script terminated.'\033[0m'
    echo
    echo -e '\033[0;32m'Suggestion'\033[0m':
    echo '   'Execute command below then reboot server.
    echo
    if [[ ! $(hostname) == $SUBDOMAIN_FQCDN ]];then
        echo echo $SUBDOMAIN_FQCDN' > /etc/hostname'
    fi
    _fqcdn=$(hostname -f | sed 's/\./\\./g')
    _hostname=$(hostname)
    echo sed -i -E \\
    echo \"s/^\\s*'(.*)'$_fqcdn\\s+$_hostname/$IP_PUBLIC $FQCDN $SUBDOMAIN_FQCDN/\" \\
    echo /etc/hosts
    echo
    exit
fi

echo -n $'\n''########################################'
echo         '########################################'
echo $'\n''#' CHAPTER 1. SETUP SERVER
echo -n $'\n''########################################'
echo         '########################################'

echo $'\n''#' Update Repository for PHP 7.4
[ -f /etc/apt/trusted.gpg.d/php.gpg ] || {
    wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg
}
[ -f /etc/apt/sources.list.d/php.list ] || {
    echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" | tee /etc/apt/sources.list.d/php.list
    update_now=1
}

if [[ $update_now == 1 ]];then
    apt update
    apt -y upgrade
fi

echo $'\n''#' Disable Sendmail '(if any)'
[ -z "$(systemctl list-unit-files --state=enabled | grep sendmail.service)" ] || {
    service sendmail stop; update-rc.d -f sendmail remove
}

command -v php > /dev/null || {

echo $'\n''#' Search PHP 7.4 in Cache
if [ $(apt-cache search php7.4 | wc -l ) == 0 ];then
    echo PHP-7.4 not found.
    echo -e '\033[0;31m'Script terminated.'\033[0m'
    exit 1
fi

apt -y install nginx php7.4 \
php7.4-{common,gd,mysql,imap,cli,fpm,curl,intl,pspell,sqlite3,tidy,xmlrpc,xsl,zip,mbstring,soap,opcache}
cd      /etc/php/7.4/fpm/
sed -i  's|^;date\.timezone =$|date.timezone = '"$TIMEZONE"'|' php.ini
/etc/init.d/php7.4-fpm restart
}
command -v mysql > /dev/null || {
apt -y install mariadb-client mariadb-server
cd      /etc/mysql/mariadb.conf.d/
sed -i  "s/bind-address/# bind-address/" 50-server.cnf
echo    "update mysql.user set plugin = 'mysql_native_password' where user='root';" | mysql -u root
echo    "" >> /etc/security/limits.conf
echo    "# Custom" >> /etc/security/limits.conf
echo    "mysql soft nofile 65535" >> /etc/security/limits.conf
echo    "mysql hard nofile 65535" >> /etc/security/limits.conf
mkdir -p /etc/systemd/system/mysql.service.d/
CONTENT=$(cat <<- 'EOF'
[Service]
LimitNOFILE=infinity
EOF
)
echo "$CONTENT" >> /etc/systemd/system/mysql.service.d/limits.conf
systemctl daemon-reload
systemctl restart mariadb
}

}

echo $'\n''#' Save DigitalOcean Token as File
[ -f ~/.digitalocean-token-ispconfig.ini ] || {
touch      ~/.digitalocean-token-ispconfig.ini
chmod 0700 ~/.digitalocean-token-ispconfig.ini
CONTENT=$(cat <<- EOF
dns_digitalocean_token = $DIGITALOCEAN_TOKEN
EOF
)
echo "$CONTENT" > ~/.digitalocean-token-ispconfig.ini
echo "$DIGITALOCEAN_TOKEN" > ~/.digitalocean-token-ispconfig.txt
}

CONTENT=$(cat <<- 'EOF'
server {
    listen 80;
    listen [::]:80;
    root /var/www/|SERVER_NAME|;
    server_name |SERVER_NAME|;
    index index.php index.html index.htm;
    location / {
        try_files $uri $uri/ =404;
    }
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
    }
}
EOF
)

echo $'\n''#' Setup ISPConfig Virtual Host
[[ -f /etc/nginx/sites-available/"$FQCDN_ISPCONFIG" && -L /etc/nginx/sites-enabled/"$FQCDN_ISPCONFIG" ]] || {
cd      /etc/nginx/sites-available
touch   "$FQCDN_ISPCONFIG"
cd      /etc/nginx/sites-enabled
ln -sf  ../sites-available/"$FQCDN_ISPCONFIG" "$FQCDN_ISPCONFIG"
cd      /etc/nginx/sites-available
echo   "$CONTENT" > "$FQCDN_ISPCONFIG"
sed -i 's/|SERVER_NAME|/'"$FQCDN_ISPCONFIG"'/' "$FQCDN_ISPCONFIG"
mkdir -p    /var/www/"$FQCDN_ISPCONFIG"
cd          /var/www/"$FQCDN_ISPCONFIG"
echo        "<?php echo '$FQCDN_ISPCONFIG'.PHP_EOL;?>" > index.php
nginx -s reload
sleep 1
curl -s http://127.0.0.1 -H "Host: $FQCDN_ISPCONFIG"
if [[ ! $(curl -s http://127.0.0.1 -H "Host: $FQCDN_ISPCONFIG") == "$FQCDN_ISPCONFIG" ]];then
    rm /etc/nginx/sites-available/"$FQCDN_ISPCONFIG"
    rm /etc/nginx/sites-enabled/"$FQCDN_ISPCONFIG"
    echo Failed to request http://"$FQCDN_ISPCONFIG"
    echo -e '\033[0;31m'Script terminated.'\033[0m'
    exit 1
fi
}

echo $'\n''#' Setup PHPMyAdmin Virtual Host
[[ -f /etc/nginx/sites-available/"$FQCDN_PHPMYADMIN" && -L /etc/nginx/sites-enabled/"$FQCDN_PHPMYADMIN" ]] || {
cd      /etc/nginx/sites-available
touch   "$FQCDN_PHPMYADMIN"
cd      /etc/nginx/sites-enabled
ln -sf  ../sites-available/"$FQCDN_PHPMYADMIN" "$FQCDN_PHPMYADMIN"
cd      /etc/nginx/sites-available
echo   "$CONTENT" > "$FQCDN_PHPMYADMIN"
sed -i 's/|SERVER_NAME|/'"$FQCDN_PHPMYADMIN"'/' "$FQCDN_PHPMYADMIN"
mkdir -p    /var/www/"$FQCDN_PHPMYADMIN"
cd          /var/www/"$FQCDN_PHPMYADMIN"
echo        "<?php echo '$FQCDN_PHPMYADMIN'.PHP_EOL;?>" > index.php
nginx -s reload
sleep 1
curl -s http://127.0.0.1 -H "Host: $FQCDN_PHPMYADMIN"
if [[ ! $(curl -s http://127.0.0.1 -H "Host: $FQCDN_PHPMYADMIN") == "$FQCDN_PHPMYADMIN" ]];then
    rm /etc/nginx/sites-available/"$FQCDN_PHPMYADMIN"
    rm /etc/nginx/sites-enabled/"$FQCDN_PHPMYADMIN"
    echo Failed to request http://"$FQCDN_PHPMYADMIN"
    echo -e '\033[0;31m'Script terminated.'\033[0m'
    exit 1
fi
}

echo $'\n''#' Setup Roundcube Virtual Host
[[ -f /etc/nginx/sites-available/"$FQCDN_ROUNDCUBE" && -L /etc/nginx/sites-enabled/"$FQCDN_ROUNDCUBE" ]] || {
cd      /etc/nginx/sites-available
touch   "$FQCDN_ROUNDCUBE"
cd      /etc/nginx/sites-enabled
ln -sf  ../sites-available/"$FQCDN_ROUNDCUBE" "$FQCDN_ROUNDCUBE"
cd      /etc/nginx/sites-available
echo   "$CONTENT" > "$FQCDN_ROUNDCUBE"
sed -i 's/|SERVER_NAME|/'"$FQCDN_ROUNDCUBE"'/' "$FQCDN_ROUNDCUBE"
mkdir -p    /var/www/"$FQCDN_ROUNDCUBE"
cd          /var/www/"$FQCDN_ROUNDCUBE"
echo        "<?php echo '$FQCDN_ROUNDCUBE'.PHP_EOL;?>" > index.php
nginx -s reload
sleep 1
curl -s http://127.0.0.1 -H "Host: $FQCDN_ROUNDCUBE"
if [[ ! $(curl -s http://127.0.0.1 -H "Host: $FQCDN_ROUNDCUBE") == "$FQCDN_ROUNDCUBE" ]];then
    rm /etc/nginx/sites-available/"$FQCDN_ROUNDCUBE"
    rm /etc/nginx/sites-enabled/"$FQCDN_ROUNDCUBE"
    echo Failed to request http://"$FQCDN_ROUNDCUBE"
    echo -e '\033[0;31m'Script terminated.'\033[0m'
    exit 1
fi
}

echo $'\n''#' Certbot Request
[ -d /etc/letsencrypt/live/"$FQCDN_ISPCONFIG" ] || {
certbot -i nginx \
   -n --agree-tos --email "${EMAIL_HOST}@${DOMAIN}" \
   --dns-digitalocean \
   --dns-digitalocean-credentials ~/.digitalocean-token-ispconfig.ini \
   -d "$FQCDN_ISPCONFIG" \
   -d "$FQCDN_PHPMYADMIN" \
   -d "$FQCDN_ROUNDCUBE"
}

echo $'\n''#' HTTPS Request Verification
_code=$(curl -L \
    -o /dev/null -s -w "%{http_code}\n" \
    https://"$FQCDN_ISPCONFIG")
if [[ "$_code" == 200 ]];then
    echo Success to request https://"$FQCDN_ISPCONFIG"
else
    echo Failed to request https://"$FQCDN_ISPCONFIG"
    echo -e '\033[0;31m'Script terminated.'\033[0m'
    exit 1
fi
_code=$(curl -L \
    -o /dev/null -s -w "%{http_code}\n" \
    https://"$FQCDN_PHPMYADMIN")
if [[ "$_code" == 200 ]];then
    echo Success to request https://"$FQCDN_PHPMYADMIN"
else
    echo Failed to request https://"$FQCDN_PHPMYADMIN"
    echo -e '\033[0;31m'Script terminated.'\033[0m'
    exit 1
fi
_code=$(curl -L \
    -o /dev/null -s -w "%{http_code}\n" \
    https://"$FQCDN_ROUNDCUBE")
if [[ "$_code" == 200 ]];then
    echo Success to request https://"$FQCDN_ROUNDCUBE"
else
    echo Failed to request https://"$FQCDN_ROUNDCUBE"
    echo -e '\033[0;31m'Script terminated.'\033[0m'
    exit 1
fi

echo $'\n''#' ISPConfig Setup
[ -d /usr/local/ispconfig ] || {

echo $'\n''#' ISPConfig Download
cd      /tmp
wget    http://www.ispconfig.org/downloads/ISPConfig-3-stable.tar.gz
tar xfz ISPConfig-3-stable.tar.gz
cd      ispconfig3_install/install/

echo $'\n''#' ISPConfig Modification PHP 7.3 to 7.4
cd      /tmp/ispconfig3_install/install/dist/conf
sed -i  's|php7.3|php7.4|g' debian100.conf.php
sed -i  's|php/7.3/|php/7.4/|g' debian100.conf.php

echo $'\n''#' MySQL Setup Root Password
echo $(pwgen -s 32 -1) > ~/.mysql-root-passwd.txt
chmod 0700 ~/.mysql-root-passwd.txt
mysql -e "UPDATE mysql.user SET Password = PASSWORD('"$(<~/.mysql-root-passwd.txt)"') WHERE User = 'root'"
mysql -e "FLUSH PRIVILEGES"

echo $'\n''#' ISPConfig Install
password=$(pwgen -s 32 -1)
cd      /tmp/ispconfig3_install/install/
cp      ../docs/autoinstall_samples/autoinstall.ini.sample ./autoinstall.ini
sed -i "s,hostname=server1.example.com,hostname=${FQCDN}," autoinstall.ini
sed -i "s,mysql_root_password=ispconfig,mysql_root_password="$(<~/.mysql-root-passwd.txt)"," autoinstall.ini
sed -i "s,http_server=apache,http_server=nginx," autoinstall.ini
sed -i "s,ispconfig_use_ssl=y,ispconfig_use_ssl=n," autoinstall.ini
echo $(pwgen 6 -1vA0B) > ~/.ispconfig-admin-passwd.txt
chmod 0700 ~/.ispconfig-admin-passwd.txt
sed -i "s,ispconfig_admin_password=admin,ispconfig_admin_password="$(<~/.ispconfig-admin-passwd.txt)"," autoinstall.ini
sed -i "s,mysql_ispconfig_password=.*,mysql_ispconfig_password="$password"," autoinstall.ini
php install.php --autoinstall=autoinstall.ini

echo $'\n''#' ISPConfig Adjust Web Root
cd      /etc/nginx/sites-available
sed -i  "s,/var/www/${FQCDN_ISPCONFIG},/usr/local/ispconfig/interface/web," \
        "${FQCDN_ISPCONFIG}"
sed -i  "s,/var/run/php/php7.4-fpm.sock,/var/lib/php7.4-fpm/ispconfig.sock," \
        "${FQCDN_ISPCONFIG}"
rm -rf /var/www/"$FQCDN_ISPCONFIG"

echo $'\n''#' Nginx Cleaning
cd  /etc/nginx/sites-enabled
rm  000-ispconfig.vhost
rm  000-apps.vhost
rm  999-acme.vhost
nginx -s reload
sleep 1
}

echo $'\n''#' Populate Variable
CONTENT=$(cat <<- EOF
include "/tmp/ispconfig3_install/install/dist/conf/$DEBIAN_CONF";
echo \$conf['ispconfig_install_dir'];
EOF
)
ispconfig_install_dir=$(php -r "$CONTENT")
phpmyadmin_install_dir=/usr/local/share/phpmyadmin/"$VERSION_PHPMYADMIN"
roundcube_install_dir=/usr/local/share/roundcube/"$VERSION_ROUNDCUBE"
scripts_dir="$ispconfig_install_dir"/scripts
ispconfig_db_user=$(php -r "include '$ispconfig_install_dir/interface/lib/config.inc.php';echo DB_USER;")
ispconfig_db_pass=$(php -r "include '$ispconfig_install_dir/interface/lib/config.inc.php';echo DB_PASSWORD;")
ispconfig_db_host=localhost
ispconfig_db_name=dbispconfig
phpmyadmin_db_user=$(php -r "include '/usr/local/share/phpmyadmin/$VERSION_PHPMYADMIN/config.inc.php';
echo \$cfg['Servers'][1]['controluser'];")
phpmyadmin_db_pass=$(php -r "include '/usr/local/share/phpmyadmin/$VERSION_PHPMYADMIN/config.inc.php';
echo \$cfg['Servers'][1]['controlpass'];")
phpmyadmin_db_host=localhost
phpmyadmin_db_name=phpmyadmin
roundcube_db_user=$(php -r "include '/usr/local/share/roundcube/$VERSION_ROUNDCUBE/config/config.inc.php';
echo parse_url(\$config['db_dsnw'], PHP_URL_USER);")
roundcube_db_pass=$(php -r "include '/usr/local/share/roundcube/$VERSION_ROUNDCUBE/config/config.inc.php';
echo parse_url(\$config['db_dsnw'], PHP_URL_PASS);")
roundcube_db_host=localhost
roundcube_db_name=roundcubemail

[ -d "$scripts_dir" ] || {

echo $'\n''#' Copy ISPConfig PHP Scripts
mkdir -p "$ispconfig_install_dir"/scripts
cp /tmp/ispconfig3_install/remoting_client/examples/* "$ispconfig_install_dir/scripts"

echo $'\n''#' Modify PHP Scripts
cd "$ispconfig_install_dir"/scripts
find * -maxdepth 1 -type f \
    -not -path 'soap_config.php' \
    -not -path 'rest_example.php' \
    -not -path 'ispc-import-csv-email.php' | while read line; do
    sed -i -e 's,^?>$,echo PHP_EOL;,' \
           -e "s,'<br />',PHP_EOL," \
           -e 's,"<br>",PHP_EOL,' \
           -e "s,<br />','.PHP_EOL," \
           -e "s,die('SOAP Error: '.\$e->getMessage());,die('SOAP Error: '.\$e->getMessage().PHP_EOL);," \
           -e "s,\$client_id = 1;,\$client_id = 0;," \
    ${line}
    done
}

echo -n $'\n''########################################'
echo         '########################################'
echo $'\n''#' CHAPTER 2. SETUP DOMAIN
echo -n $'\n''########################################'
echo         '########################################'

echo $'\n''#' Modify MX DNS Record
_fqcdn=$DOMAIN
_output=$(curl -X GET \
    -s \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
    "https://api.digitalocean.com/v2/domains/$DOMAIN/records?type=MX&name=$_fqcdn")
CONTENT=$(cat <<- EOF
\$object = (json_decode('$_output'));
if (is_object(\$object)) {
    foreach (\$object->domain_records as \$domain_record) {
        if (\$domain_record->data == '$FQCDN_MX') {
            exit(1);
        }
    }
}
EOF
)
php -r "$CONTENT"
if [[ "$?" == "1" ]];then
    echo DNS MX Record of FQCDN "'"${DOMAIN}"'" target to "'"${FQCDN_MX}"'" found in DNS Digital Ocean.
else
    echo DNS MX Record of FQCDN "'"${DOMAIN}"'" target to "'"${FQCDN_MX}"'" NOT found in DNS Digital Ocean.
    echo -n Trying to create...
    _data=$FQCDN_MX"."
    _priority=10
    _code=$(curl -X POST \
        -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" \
        -H "Content-Type: application/json" \
        -o /dev/null -s -w "%{http_code}\n" \
        -d '{"type":"MX","name":"@","data":"'"$_data"'","priority":"'"$_priority"'","port":null,"ttl":1800,"weight":null,"flags":null,"tag":null}' \
        "https://api.digitalocean.com/v2/domains/$DOMAIN/records")
    case "$_code" in
        201)
            echo ' 'Created.
            ;;
        *)
            echo ' 'Failed.
            echo Unexpected result with response code: $_code.
            echo -e '\033[0;31m'Script terminated.'\033[0m'
            exit 1
    esac
fi


echo -n $'\n''########################################'
echo         '########################################'
echo $'\n''#' Script Finished
echo -n $'\n''########################################'
echo         '########################################'
echo $'\n''#' Credentials
echo PHPMyAdmin: "https://$FQCDN_PHPMYADMIN"
echo '   - 'username: $ispconfig_db_user
echo '     'password: $ispconfig_db_pass
echo '   - 'username: $phpmyadmin_db_user
echo '     'password: $phpmyadmin_db_pass
echo '   - 'username: $roundcube_db_user
echo '     'password: $roundcube_db_pass
echo Roundcube: "https://$FQCDN_ROUNDCUBE"
echo '   - 'username: $EMAIL_ADMIN
user="$EMAIL_ADMIN"
host="$DOMAIN"
[ -f ~/".roundcube-passwd-user-${user}-host-${host}.txt" ] && \
echo '     'password: $(<~/".roundcube-passwd-user-${user}-host-${host}.txt")
echo ISP Config: "https://$FQCDN_ISPCONFIG"
echo '   - 'username: admin
[ -f ~/".ispconfig-admin-passwd.txt" ] && \
echo '     'password: $(<~/.ispconfig-admin-passwd.txt)
echo $'\n''#' Manual Action
echo Command to make sure remote user working properly:
echo -e '   '"\033[36m"isp"\033[m" "\033[33m"php"\033[m" "\033[35m"login.php"\033[m"
echo Command to implement '`isp`' command autocompletion immediately:
echo -e '   '"\033[36m"source"\033[m" "\033[35m"/etc/profile.d/isp-completion.sh"\033[m"
echo Command to check PTR Record:
echo -e '   '"\033[36m"dig"\033[m" "\033[35m"-x"\033[m" "\033[33m""$IP_PUBLIC""\033[m" "\033[35m"+short"\033[m"
if [[ ! $(dig -x $IP_PUBLIC +short) == ${FQCDN}. ]];then
    echo -e $'\n''#' '\033[0;33m'Attention'\033[0m'
    echo Your PTR Record is different with your FQCDN.
    echo '   dig -x '"$IP_PUBLIC"' +short  #' $(dig -x $IP_PUBLIC +short)
    echo '   'echo \$FQCDN'                    #' $FQCDN
    echo Change your droplet name with FQCDN.
    echo More info: https://www.digitalocean.com/community/questions/how-do-i-setup-a-ptr-record
fi
echo
